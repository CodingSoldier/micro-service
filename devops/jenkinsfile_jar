#!groovy
pipeline {
    agent any
    environment {
        // CICD脚本目录
        PIPELINE_SCRIPT_DIR = "/usr/local/devops"
        // 应用根目录绝对路径
        APPLICATION_ROOT_ABSOLUTE = getApplicationRootAbsolute()
        DEVOPS_DATA = [:]
    }
    stages {
        stage('编译') {
            steps {
                echo "【信息】所有环境变量初始值"
                sh "printenv"

                echo "【信息】全部参数：${params}"

                // 拉取部署文件
                dir("${PIPELINE_SCRIPT_DIR}") {
                    git GIT_URL
                    sh "mv -f devops/* ${PIPELINE_SCRIPT_DIR}/"
                }

                // 需要安装插件git parameter
                git branch: "${APPLICATION_GIT_BRANCH}", url: "${APPLICATION_GIT_URL}"
                dir(APPLICATION_ROOT_ABSOLUTE) {
                    script {
                        DEVOPS_DATA = getDevopsData()
                    }
                    sh "mvn clean install -D maven.test.skip=true"
                }
            }
        }
        stage("部署") {
            steps {
                dir(APPLICATION_ROOT_ABSOLUTE) {
                    script {
                        for (int i = 0; i < DEVOPS_DATA.envData.ipArr.length; i++) {
                            def serverIp = DEVOPS_DATA.envData.ipArr[i]
                            sh """
                                ssh root@${serverIp} "mkdir /usr/local/${DEVOPS_DATA.applicationName}"
                                scp target/*.jar root@${serverIp}:/usr/local/${DEVOPS_DATA.applicationName}/${DEVOPS_DATA.applicationName}.jar
                                scp ${PIPELINE_SCRIPT_DIR}/deploy_jar.sh root@${serverIp}:/usr/local/${DEVOPS_DATA.applicationName}/deploy_jar.sh
                                ssh root@${serverIp} "chmod +x ${PIPELINE_SCRIPT_DIR}/deploy_jar.sh; ${PIPELINE_SCRIPT_DIR}/deploy_jar.sh ${DEVOPS_DATA.applicationName}.jar ${DEVOPS_DATA.envData.stopStartInterval} ${DEVOPS_DATA.envData.jarStartCommand}"
                               """
                        }
                    }
                }
            }
        }
    }
}

/**
 * 获取应用根目录绝对路径
 */
def getApplicationRootAbsolute() {
    return params.APPLICATION_ROOT_DIR ? pwd() + "/" + params.APPLICATION_ROOT_DIR : pwd()
}

def stringIsBlank(str) {
    str == null || "" == str.trim()
}

/**
 * 需要去Available下安装 pipeline utility steps
 */
def getDevopsData() {

    String[] devopsOptionArr = DEVOPS_OPTION.split('-')
    def devopsEnv = devopsOptionArr[0]
    String[] ipArr = devopsOptionArr[1].split(',')

    yamlData = readYaml file: "${APPLICATION_ROOT_ABSOLUTE}/devops/devops.yaml"

//    if (yamlData == "" ) {
//        echo "【错误】devops/devops.yaml读取结果=${DEVOPS_DATA}"
//        throw new RuntimeException("【错误】读取devops/devops.yaml的结果为空")
//    }

    yamlData.envData = devopsEnv == "dev" ? yamlData.dev
            : devopsEnv == "test" ? yamlData.test
            : devopsEnv == "uat" ? yamlData.uat
            : devopsEnv == "prod" ? yamlData.prod
            : [:]

    yamlData.envData.devopsEnvName = devopsEnv
    yamlData.envData.ipArr = ipArr

    echo "【信息】devops/devops.yaml读取结果=${yamlData}"

    return yamlData
}

