server:
  # 服务端口
  port: 8080
  servlet:
    context-path: /boot-web

spring:
  application:
    name: boot-web
  datasource:
    username: root
    password: cpq..123
    url: jdbc:mysql://localhost:3306/cpq?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      # 连接池最大连接数
      maximum-pool-size: 200
      # 空闲时保持最小连接数
      minimum-idle: 20
      # 空闲连接存活时间
      idle-timeout: 300000
      # 连接超时时间
      connection-timeout: 20000
      # 测试sql
      connection-test-query: select 1
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间 单位 ms（毫秒）
    timeout: 3000
    lettuce:
      pool:
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: 3000
        # 连接池中的最大空闲连接 默认 8
        max-idle: 100
        # 连接池中的最小空闲连接 默认 0
        min-idle: 20
  # springboot方式连接spring-boot-admin-server
  boot:
    admin:
      client:
        url: http://localhost:10100


# 暴露 actuator 端点
# 还需要在拦截器中排除 /actuator/**
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

# starter-log4j2 配置
logging:
  # log4j2-spring.xml 已在 starter-log4j2 中配置好了，无需新建
  config: classpath:log4j2-spring.xml
  file:
    # 日志根目录
    path: /logs
    # log4j2-spring.xml 使用 logging.file.name 作为日志子目录、日志文件名前缀
    name: ${spring.application.name}
  level:
    com:
      github:
        codingsoldier: DEBUG

# mybatis-plus 配置
mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: deleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


test:
  msg: 测试信息

framework:
  starter:
    #    mybatis-plus:
    #      enabled: false
    swagger:
      #      enabled: false
      base-package: com.github.codingsoldier.bootweb
#    web:
#      enabled: false
#    redis:
#      enabled: false
