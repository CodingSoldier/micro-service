spring:
  cloud:
    sentinel:
      transport:
        # 配置 sentinel dashboard 地址
        dashboard: 192.168.1.3:10102
        # 配置端口，启动一个 Http Server, 该 Server 会与 Sentinel 控制台做交互
        port: 10111
      # 服务启动直接建立心跳连接
      eager: true
      datasource:
        # 名称任意, 代表数据源
        ds:
          nacos:
            # sentinel 整合 nacos 实现规则持久化
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
#            username: nacos
#            password: nacos
            dataId: ${spring.application.name}-sentinel
            namespace: ${spring.cloud.nacos.discovery.namespace}
            groupId: DEFAULT_GROUP
            data-type: json
            # 规则类型: com.alibaba.cloud.sentinel.datasource.RuleType
            # FlowRule 就是限流规则
            rule-type: flow

  datasource:
    username: root
    password: cpq..123
    url: jdbc:mysql://192.168.1.3:3306/cpq?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      # 连接池最大连接数
      maximum-pool-size: 200
      # 空闲时保持最小连接数
      minimum-idle: 20
      # 空闲连接存活时间
      idle-timeout: 300000
      # 连接超时时间
      connection-timeout: 20000
      # 测试sql
      connection-test-query: select 1
#  zipkin:
#    sender:
#      # 指定通过什么类型发送消息 默认是 web
#      type: WEB
#    # 指定 zipkin 的地址
#    base-url: http://192.168.1.101:10103


logging:
  # logback-spring.xml 已在 starter-logback 中配置好了，无需新建
  config: classpath:logback-spring.xml
  file:
    # 日志根目录
    path: /logs
    name: ${spring.application.name}
#  level:
#    com.github.codingsoldier.example: DEBUG


#starter:
micro-service:
  starter:
    mybatis-plus:
      enabled: false
    # starter-web 配置
    web:
      logging:
        requestResponseLog: true
        includeHeaders: false
    # starter-log4j2 配置
#    log4j2:
#      # 异常信息最大长度
#      ex-max-length: 1024
#      time-based-triggering-policy:
#        # 多久滚动一次
#        interval: 24
#      size-based-triggering-policy:
#        # 超过该大小就触发日志文件滚动更新
#        size: 1MB
#      default-rollover-strategy:
#        # 同一文件夹下文件数量到达该数量开始覆盖
#        max: 7